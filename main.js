const { Client, GatewayIntentBits, EmbedBuilder, PermissionsBitField, Events } = require('discord.js');
const { token } = require('./config.json');
const { joinVoiceChannel, createAudioPlayer, createAudioResource, AudioPlayerStatus, VoiceConnectionStatus } = require('@discordjs/voice');
const ffmpeg = require('ffmpeg-static');
const prism = require('prism-media');
const quranSound = './quran/002.mp3';
const myRules = "https://cdn.discordapp.com/attachments/1267234350253084702/1267240704606863472/-_.png?ex=66a81160&is=66a6bfe0&hm=5a0d09e34f947c60fc6e959acef25caa6a27596bcdc886feeab1cadbfd50cc8e&";
const about = "https://cdn.discordapp.com/attachments/1267234350253084702/1267240706825654464/-_.png?ex=66a81160&is=66a6bfe0&hm=2bedf85b8694a4e3eb0fcc2779f5fbf8aa8d5454157fd4230442c8489c3a2961&";
const prefix = "!";

const client = new Client({
    intents: [
        GatewayIntentBits.Guilds,
        GatewayIntentBits.GuildMessages,
        GatewayIntentBits.MessageContent,
        GatewayIntentBits.GuildVoiceStates,
        GatewayIntentBits.GuildMembers
    ]
});

client.once(Events.ClientReady, async readyClient => {
    console.log(`Ready! Logged in as ${readyClient.user.tag}`);
});

client.on('messageCreate', async message => {
    if (message.content === prefix + 'quran'){
        if (message.member.voice.channel) {
            const connection = joinVoiceChannel({
                channelId: message.member.voice.channel.id,
                guildId: message.guild.id,
                adapterCreator: message.guild.voiceAdapterCreator
            });

            connection.on(VoiceConnectionStatus.Ready, () => {
                console.log('The bot has connected to the channel!');
                const player = createAudioPlayer();
                const resource = createAudioResource(quranSound);

                player.play(resource);
                connection.subscribe(player);

                player.on(AudioPlayerStatus.Idle, () => {
                    console.log('Finished playing!');
                    connection.destroy();
                });
            });

            connection.on(VoiceConnectionStatus.Disconnected, () => {
                console.log('Disconnected from the channel!');
                connection.destroy();
            });
        } else {
            message.reply('You need to join a voice channel first!');
        }
    }
});

client.on('interactionCreate', async interaction => {
    if (!interaction.isCommand()) return;

    const { commandName, options } = interaction;

    if (commandName === 'embed') {
        if (!interaction.member.permissions.has(PermissionsBitField.Flags.Administrator)) {
            return interaction.reply({ content: 'ุฃููุง ุงููุณุชุฎุฏู ุ ููุณ ูุฏูู ุตูุงุญูุฉ ูุฅุณุชุฎุฏุงู ูุฐุง ุงูุฃูุฑ ๐', ephemeral: true });
        }

        const title = options.getString('title');
        const description = options.getString('description');
        const footer = options.getString('footer');
        const color = options.getString('color') || 'Green';
        const image = options.getString('image');

        if (!title || !description) {
            return interaction.reply({ content: 'ูุฌุจ ุชูุฏูู ุนููุงู ููุตู ููุฅููุจุฏ.', ephemeral: true });
        }

        const embed = new EmbedBuilder()
            .setTitle(title)
            .setDescription(description)
            .setColor(color)
            .setFooter({ text: footer || '', iconURL: interaction.user.avatarURL() })
            .setTimestamp();

        if (image) {
            embed.setImage(image);
        }

        await interaction.reply({ embeds: [embed] });
    }
});

client.on('messageCreate', message => {
    try {
        const autoReplies = {
            ".": "**ุฃุญูู ูู ูููุท ุฏุง ููุง ุฃูู :heart:**",
            "ุจุฑุจ": "**๐ค ุชููููุช ุ ูุง ุชุชุฃุฎุฑ ุจููุฒ**",
            "ุจุงู": "**๐ ูููู ุจุงู ูุง ูุญุด ุ ูุชุชุฃุฎุฑุด ุชุงูู**",
            "ุงูุณูุงู ุนูููู ูุฑุญูุฉ ุงููู ูุจุฑูุงุชู": "**ูุนูููู ุงูุณูุงู ูุฑุญูุฉ ุงููู ูุจุฑูุงุชู โจ**",
            "ุงูุณูุงู ุนูููู": "ููุฅูุฐูุง ุญูููููุชููู ุจูุชูุญููููุฉู ููุญูููููุง ุจูุฃูุญูุณููู ููููููุง ุฃููู ุฑูุฏูููููุง๐ก",
            "ุชูุฏูู":`**ููููุฐุฌ ุชูุฏููู ุงูุฅุฏุงุฑุฉ :
ุงูุฅุณู :
ุงูุนูุฑ :
ุฎุจุฑุชู ุจุงูุฏูุณููุฑุฏ :
ุนูุฑ ุญุณุงุจู :
ููุด ุชุจู ุชูุฏู :
ุจุฅูู ุฑุงุญ ุชููุฏูุง :
ูุฏุฉ ุชูุงุนูู :
ูู ุณุชูุชุฒู ุจุจููุฏ ุงูุฅูุถูุงู ููุฅุฏุงุฑุฉ ุ ููุง ุชุถุฑ ูุฑูู ุงูุฅุฏุงุฑุฉ ุจุดูุก ุ**`
        };

        if (autoReplies[message.content]) {
            message.reply(autoReplies[message.content]);
            if (message.content === "ุจุฑุจ") message.react("๐ค");
            if (message.content === "ุจุงู") message.react("๐");
        }

        const badWords = ["ุฎุฑุง", "ูุตุงุจูู", "ุฎูู", "ูุณูู", "ุนูู"];
        if (badWords.includes(message.content)) {
            message.delete();
            message.reply(`ุฅุญุชุฑู ููุณู ูุง ูููู ุงูุฃุฏุจ ${message.author}`);
        }

        if (message.content === prefix + "ููุงููู") {
            const rules = new EmbedBuilder()
                .setColor("Green")
                .setTitle("ููุงููู ูุฌุชูุน ุฐูููุฑ ุงูุฏููู ุงููุณูู")
                .setDescription(`**ุงูุณูุงู ุนูููู ูุฑุญูุฉ ุงููู ูุจุฑูุงุชูุ**
                  **ูุฑุญุจ ุจูู ูู ุณูุฑูุฑูุง ูุฌุชูุน ุฐูููุฑ ุงููุณูู. ููุญูุงุธ ุนูู ุจูุฆุฉ ูููุฉ ููููุฏุฉ ููุฌููุนุ ูุฑุฌู ุงูุงูุชุฒุงู ุจุงูููุงููู ุงูุชุงููุฉ:**
**1. ุงุญุชุฑุงู ุงูุฌููุน:**
  - **.ูุฌุจ ุนูู ุงูุฌููุน ุงุญุชุฑุงู ุงูุขุฎุฑูู ูุนุฏู ุงูุฅุณุงุกุฉ ุฅูููู ุจุฃู ุดูู ูู ุงูุฃุดูุงู**
  - **.ูููุน ุงูููุงุดุงุช ุงูุณูุงุณูุฉ ูุงูุฏูููุฉ ุงููุซูุฑุฉ ููุฌุฏู ูุงูุชู ูุฏ ุชุคุฏู ุฅูู ุงููุชูุฉ**
**2. ุงููุญุชูู ุงูุฏููู:**
  - **.ูุฌุจ ุฃู ูููู ุงููุญุชูู ุงูููุดูุฑ ููุงุณุจูุง ููุชูุงุดู ูุน ููู ุงูุฅุณูุงู ูุชุนุงูููู**
  - **.ูููุน ูุดุฑ ุงููุชุงูู ุจุฏูู ุงูุชุฃูุฏ ูู ูุตุฏุฑูุง ููุตุฏุงููุชูุง**
**3. ุงูููุงุดุงุช ุงูุนุงูุฉ:**
  - **.ููุณูุญ ุจุงูููุงุดุงุช ุงูุนุงูุฉ ุงููุงุฏูุฉ ูุงููููุฏุฉ**
  - **.ูููุน ุงูุณุจุงู ูุงูุฅุนูุงูุงุช ุจุฏูู ุฅุฐู ูุณุจู ูู ุงูุฅุฏุงุฑุฉ ุฃู ุงููุดุฑ ููุง ูู ุตูู ุจุฐูู**
**4. ุงููุบุฉ:**
  - **.ูููุถู ุงุณุชุฎุฏุงู ุงููุบุฉ ุงูุนุฑุจูุฉ ุงููุตุญู**
  - **.ูููุน ุงุณุชุฎุฏุงู ุงูุฃููุงุธ ุงููุงุจูุฉ ุฃู ุงููุณูุฆุฉ**
  - **.ููุณ ูู ุงูุถุฑูุฑู ุงูุชุญุฏุซ ุจุงููุตุญู ูููู ููุญูุงุธ ุนูู ุจูุฆุฉ ูุธููุฉ ููุท**
**5. ุงูุฃูุงู:**
  - **.ูุญุธุฑ ูุดุฑ ุฃู ูุนูููุงุช ุดุฎุตูุฉ ุฃู ุญุณุงุณุฉ**
  - **.ูููุน ูุดุงุฑูุฉ ุงูุฑูุงุจุท ุงูุถุงุฑุฉ ุฃู ุงููุดุจููุฉ**
  **ุงูุฑุฌุงุก ูู ุงูุฌููุน ุงูุงูุชุฒุงู ุจูุฐู ุงูููุงููู ูุถูุงู ุงุณุชูุชุงุน ุงูุฌููุน ุจุจูุฆุฉ ูุธููุฉ ูุขููุฉ**
  **ุจุงุฑู ุงููู ููููุ ูุดูุฑูุง ูุชููููู ูุงูุชุฒุงููู**
**ุฅุฏุงุฑุฉ ูุฌุชูุน ุฐูููุฑ.**`)
                .setImage(myRules)
                .setFooter({ text: "ุฌุฒุงูู ุงููู ุฎูุฑูุง ุนูู ุงูุงูุชุฒุงู ุจุงูููุงููู", iconURL: message.author.avatarURL() })
                .setTimestamp();

            message.channel.send({ embeds: [rules] });
        }

        if (message.content === prefix + "help") {
            const help = new EmbedBuilder()
                .setColor('AQUA')
                .setTitle("ุฃูุงููุฑ ุงูุจููุช")
                .setDescription(`**ุฃูุงูุฑ ุจูุช ุฐููุฑ :...`)
                .setFooter({ text: "ูุงุฆูุฉ ุฃูุงูุฑ ุงูุจูุช", iconURL: message.author.avatarURL() })
                .setTimestamp();

            message.channel.send({ embeds: [help] });
        }

        if (message.content === prefix + "status") {
            const botStatus = new EmbedBuilder()
                .setColor('Purple')
                .setTitle("๐ข ุญุงูุฉ ุงูุจูุช")
                .setDescription(`**ุงูุจููุฌ ูู ${Date.now() - message.createdTimestamp}ms...**`)
                .setFooter({ text: "ุญุงูุฉ ุงูุจูุช", iconURL: message.author.avatarURL() })
                .setTimestamp();

            message.channel.send({ embeds: [botStatus] });
        }
    } catch (error) {
        console.error('Error handling message:', error);
        message.reply('ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ูุนุงูุฌุฉ ุงูุฃูุฑ ุงูุฎุงุต ุจู. ุงูุฑุฌุงุก ุงููุญุงููุฉ ูุงุญูุงู.');
    }
});

client.login(token);
